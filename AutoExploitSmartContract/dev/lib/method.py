from collections import Counter
import fasttext

RETURN  = "0xF3"
REVERT  = "0xFD"
INVALID = "0xFE"

model_predict = fasttext.load_model('wiki.simple.bin')

class ParamRecord:
    def __init__(self):
        lastpc = 0;
        isDeployment = False;

class FunctionRecord:
    def __init__(self, name, args):
        self.execution_count = 0
        self.opcodes = []
        self.basic_block = []
        self.features = {
            'Name'      : model_predict.get_word_vector(name).tolist(),
            'Opcodes'   : None,
            'Arguments' : args,
            'Call'      : None,
            'Revert'    : 0,
            'Return'    : 0,
            'Assert'    : 0,
            'Coverage'  : 0,
        }

    def count_top_50(self):
        c = Counter(self.opcodes)
        return list(dict(c.most_common(50)).keys())
    
    # basic block = opcodes without jumpdest
    def basic_block(self):
        basic_block = []
        for op in self.opcodes:
            if(op != "JUMPDEST"):
                basic_block += op

        self.basic_block = basic_block


        
