from web3 import Web3
import requests
import os, shutil, subprocess
import random, datetime
import time

url = 'http://127.0.0.1:5000'

def compile_sol(solfile):
    r = requests.post(url + '/compile',  data = {'solfile': solfile})
    print(r.text)

def deploy(contract):
    r = requests.post(url + '/deploy',  data = {'contract': contract})
    print(r.text)

def execute(contract, function):
    r = requests.post(url + '/execute', data=  {'contract': contract, 'function': function})
    print(r.text)
    if('revert' in r.text):
        return False
    return True

# Web3 Provider
# Provider = 'http://127.0.0.1:8545'
# w3 = Web3(Web3.HTTPProvider(Provider))
# accounts_list = w3.eth.accounts

# SCM = ContractManager(w3_provider=w3, accounts=accounts_list)

# Deploy contract to network
dataset = os.listdir('./dataset')
contract_tested = os.listdir('./contracts')

solfile = contract_tested.pop()

# while solfile in contract_tested:
#     solfile = dataset.pop()

# shutil.copyfile(f'dataset/{solfile}', f'contracts/{solfile}')

compile_sol(solfile=solfile)

# Get collection of functions from call group
func_list = open('Category/experiment/call','r').read().split('\n')
collection = []
for func in func_list:
    if(solfile in func):
        collection += [func]

# Simulate Agent
# Pick function from call group
random.seed(datetime.time.second)
current_contract = ''
while True:
    time.sleep(0.5)
    pick_random = random.choice(collection)
    contract    = pick_random.split('>')[-2]
    function    = pick_random.split('>')[-1]
    
    if(contract != current_contract):
            deploy(contract)
            current_contract = contract
    print("Execute", contract, '->' , function)
    execute(contract, function)